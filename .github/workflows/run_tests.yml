name: Run the tests

on: [pull_request]

env:
  EXAMPLES_FOLDER: examples

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, windows-latest]
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/eyedentify3d
          - os: macos-latest
            label: osx-arm64
            prefix: /Users/runner/miniconda3/envs/eyedentify3d
          - os: macos-13
            label: osx-intel
            prefix: /Users/runner/miniconda3/envs/eyedentify3d
          - os: windows-latest
            label: win-64
            prefix: C:\Miniconda3\envs\eyedentify3d
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code with submodule
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: environment.yml
          activate-environment: eyedentify3d

      - name: Install test dependencies
        run: |
          conda install -c conda-forge pytest pytest-cov codecov black biorbd=1.11.2

      - name: Run tests with code coverage
        run: pytest -v --color=yes --cov-report=xml --cov=eyedentify3d tests

      - name: Send Codecov report
        id: archive
        uses: codecov/codecov-action@v5
        with:
          path: .covergage
          file: ./coverage.xml
          if-no-files-found: error
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: EveCharbie/EyeDentify3d
        if: matrix.os == 'ubuntu-latest'